/*给你两个非空的链表，表示两个非负的整数。它们每位数字都是按照逆序的方式存储的，
并且每个节点只能存储一位数字。请你将两个数相加，并以相同形式返回一个表示和的
链表。你可以假设除了数字 0 之外，这两个数都不会以 0开头。*/

class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
    ListNode* ans = new ListNode(-1);
    ListNode* root = ans;
	int sum = 0;
	bool carry = false;
	while(l1 != NULL || l2 != NULL)
	{
        sum = 0;
		if(l1 != NULL)
		{
			sum += l1->val;
			l1 = l1->next;
		}
		if(l2 != NULL)
		{
			sum += l2->val;
			l2 = l2->next;
		}
		if(carry) ++sum;
		root->next = new ListNode(sum % 10);
		if(sum > 9) carry = true;
		else carry = false;
        root = root->next;
	}
	if(carry) root->next = new ListNode(1);
	return ans->next;
    }
};
