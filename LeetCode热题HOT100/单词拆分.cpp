/*给定一个非空字符串 s 和一个包含非空单词的列表 wordDict，判定 s 是否可以被空格拆分为一个或多个在字典中出现的单词。
说明：
拆分时可以重复使用字典中的单词。
你可以假设字典中没有重复的单词。*/

class Solution {
public:
    bool wordBreak(string s, vector<string>& wordDict) {
        unordered_set<string> us;
        int leng = 0;
        for(string i : wordDict)
        {
            us.insert(i);;
            leng = max(leng, int(i.length()));
        } 
        int n = s.length();
        vector<bool> dp(n + 1, false);
        dp[0] = true;
        for(int i = 1; i <= n; ++i)
        {
            for(int j = max(0, i - leng); j < i; ++j)
            {
                if(dp[j] && us.find(s.substr(j, i-j)) != us.end())
                {
                    dp[i] = true;
                    break;
                }
            }
        }
        return dp[n];
    }
};

