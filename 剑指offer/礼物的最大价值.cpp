/*在一个m*n的棋盘的每一格都放有一个礼物，每个礼物都有一定的价值（价值大于 0）。
你可以从棋盘的左上角开始拿格子里的礼物，并每次向右或者向下移动一格、直到到达
棋盘的右下角。给定一个棋盘及其上面的礼物的价值，请计算你最多能拿到多少价值的礼物？*/
class Solution {
public:
    int maxValue(vector<vector<int>>& grid) {
        int m = grid.size();
        if(m == 0) return 0;
        int n = grid[0].size();
        //处理边界 
        for(int i = 1; i < m; ++i) grid[i][0] += grid[i-1][0];
        for(int j = 1; j < n; ++j) grid[0][j] += grid[0][j-1];
        //dp
        for(int i = 1; i < m; ++i)
        {
            for(int j = 1; j<n; ++j)
            {
                grid[i][j] += max(grid[i-1][j], grid[i][j-1]);
            }
        }
        return grid[m-1][n-1];
    }
};

